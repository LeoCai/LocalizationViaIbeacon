package com.leocai.beaconlocalization.weka;

import android.content.Context;
import android.util.Log;

import java.io.File;
import java.io.IOException;

import weka.classifiers.Classifier;
import weka.core.Attribute;
import weka.core.FastVector;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.converters.ArffLoader;

public class WekaTest {

    private static final String TAG = "weka";
    private Classifier cls;
	private Instances dataUnlabeled;

	public void init(Context context) throws Exception{
		cls = (Classifier) weka.core.SerializationHelper
				.read(context.getResources().getAssets().open("m.model"));
		ArffLoader atf = new ArffLoader();
		atf.setFile(new File("test.arff"));
		FastVector atts = new FastVector();
		Attribute attr0 = new Attribute("b0");
		Attribute attr1 = new Attribute("b1");
		Attribute attr2 = new Attribute("b2");
		Attribute attr3 = new Attribute("b3");
		Attribute attr4 = new Attribute("b4");
		Attribute attr5 = new Attribute("b5");
		FastVector attributeValues = new FastVector(8);
		attributeValues.addElement("0");
		attributeValues.addElement("1");
		attributeValues.addElement("2");
		attributeValues.addElement("3");
		attributeValues.addElement("4");
		attributeValues.addElement("5");
		attributeValues.addElement("6");
		attributeValues.addElement("7");
		Attribute attr6 = new Attribute("pos", attributeValues);
		atts.addElement(attr0);
		atts.addElement(attr1);
		atts.addElement(attr2);
		atts.addElement(attr3);
		atts.addElement(attr4);
		atts.addElement(attr5);
		atts.addElement(attr6);
		dataUnlabeled = new Instances("TestInstances", atts, 1);
		dataUnlabeled.setClassIndex(dataUnlabeled.numAttributes() - 1);        
	}

	public  double predict(double [] testdata) {
        double predict=-1;
		try {
			Instance newInst = new Instance(1, testdata);
			dataUnlabeled.delete();
			dataUnlabeled.add(newInst);
			dataUnlabeled.setClassIndex(dataUnlabeled.numAttributes() - 1);
            predict = cls.classifyInstance(dataUnlabeled.firstInstance());
            Log.d(TAG,predict+"");
            System.out.println(predict);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        return predict;
	}
	
	public static void main(String args[]){
//		WekaTest wekaTest = new WekaTest();
//		try {
//			wekaTest.init();
//			wekaTest.predict(new double[]{0,10.73738084,11.87738066,9.93006961,10.4303044,5.704406757,7});
//			wekaTest.predict(new double[]{11.03989678,8.139665875,12.93977038,7.48510212,11.61862472,10.60204447,11});
//		} catch (Exception e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
	}

}
